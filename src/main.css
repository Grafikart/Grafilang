:root {
    --gap: .5rem;
    --background: #1A1B26;
    --border: #32354f;
    --text: #94a3b8;
    --title: #C0CAF5;
    --sidebarWidth: 50px;
    --accent: #ffbf00;
}

@layer reset {
    /***
        The new CSS reset - version 1.8.5 (last updated 14.6.2023)
        GitHub page: https://github.com/elad2412/the-new-css-reset
    ***/

    /*
        Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
        - The "symbol *" part is to solve Firefox SVG sprite bug
        - The "html" attribute is exclud, because otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
     */
    *:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
        all: unset;
        display: revert;
    }

    /* Preferred box-sizing value */
    *,
    *::before,
    *::after {
        box-sizing: border-box;
    }

    /* Reapply the pointer cursor for anchor tags */
    a, button {
        cursor: revert;
    }

    /* Remove list styles (bullets/numbers) */
    ol, ul, menu {
        list-style: none;
    }

    /* For images to not be able to exceed their container */
    img {
        max-inline-size: 100%;
        max-block-size: 100%;
    }

    /* removes spacing between cells in tables */
    table {
        border-collapse: collapse;
    }

    /* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
    input, textarea {
        -webkit-user-select: auto;
    }

    /* revert the 'white-space' property for textarea elements on Safari */
    textarea {
        white-space: revert;
    }

    /* minimum style to allow to style meter element */
    meter {
        -webkit-appearance: revert;
        appearance: revert;
    }

    /* preformatted text - use only for this feature */
    :where(pre) {
        all: revert;
    }

    /* reset default text opacity of input placeholder */
    ::placeholder {
        color: unset;
    }

    /* remove default dot (â€¢) sign */
    ::marker {
        content: initial;
    }

    /* fix the feature of 'hidden' attribute.
       display:revert; revert to element instead of attribute */
    :where([hidden]) {
        display: none;
    }

    /* revert for bug in Chromium browsers
       - fix for the content editable attribute will work properly.
       - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element */
    :where([contenteditable]:not([contenteditable="false"])) {
        -moz-user-modify: read-write;
        -webkit-user-modify: read-write;
        overflow-wrap: break-word;
        -webkit-line-break: after-white-space;
        -webkit-user-select: auto;
    }

    /* apply back the draggable feature - exist only in Chromium and Safari */
    :where([draggable="true"]) {
        -webkit-user-drag: element;
    }

    /* Revert Modal native behavior */
    :where(dialog:modal) {
        all: revert;
    }

    pre {
        margin: 0;
    }
}

body {
    margin: 0;
    padding: 0;
    background-color: #14141a;
    color: var(--text);
    font-family: sans-serif;
}

a {
    color: inherit;
}

.root {
    height: 100vh;
    display: grid;
    grid-template-columns: var(--sidebarWidth) 1fr;
}

.root > *:last-child {
    padding: var(--gap);
}

.sidebar {
    background-color: var(--background);
    display: flex;
    flex-direction: column;
    border-right: 1px solid var(--border);
}

.sidebar a {
    height: var(--sidebarWidth);
    opacity: .5;
    display: grid;
    place-items: center;
    transition: .3s;
}

.sidebar a:hover{
    opacity: 1;
}

.sidebar a.active {
    opacity: 1;
    box-shadow: inset 3px 0 0 0 var(--accent);
    background-color: #14141a;
}
.code-input {
    display: none;
}

.challenge {
    display: grid;
    grid-template-columns: 1fr 1fr;
    height: 600px;
    gap: var(--gap);
}

.challenge-title {
    font-size: 1.25rem;
    font-weight: bold;
    color: var(--title);
    margin-bottom: .75rem;
}

.challenge__row {
    display: flex;
    flex-direction: column;
    gap: var(--gap);
    height: 100%;
}

.card {
    background-color: var(--background);
    border: 1px solid var(--border);
}

.card--padded {
    padding: .75rem;
}

.card__title {
    margin-bottom: .5rem;
    font-weight: bold;
    color: var(--title);
    display: flex;
    align-items: center;
    gap: .3rem;
}

.challenge__description {
    padding: 1rem;
}

.challenge__description,
.editor {
    height: 100%;
    overflow: auto;
    min-height: 0;
    flex-shrink: 1;
}

.tests {
    flex-shrink: 0;
}

.output {
    height: 150px;
}

.actions {
    position: absolute;
    top: var(--gap);
    right: var(--gap);
    display: flex;
    border:solid 1px var(--border);
    border-radius: 3px;
    background-color: var(--background);

    button {
        color: var(--title);
        font-size: .875rem;
        padding: .3rem .5rem;
        display: flex;
        align-items: center;
        cursor: pointer;
        gap: .25rem;
    }

    button + button {
        border-left: solid 1px var(--border);
    }

    button:hover {
        background-color: var(--border);
    }

    button:first-child {
        color: var(--accent)
    }

    svg {
        width: 16px;
        height: 16px;
    }
}

.btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: .3rem;
    text-align: center;
    padding: .5rem;
}

.btn svg {
    width: 16px;
    height: 16px;
}

.btn-primary {
    background-color: var(--accent);
    color: var(--background);
}

.btn-outlined {
    background: transparent;
    border:solid 1px var(--accent);
    color: var(--accent)
}

.btn-block {
    width: 100%;
}

